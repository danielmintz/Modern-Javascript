// npm init
//npm install @babel/core @babel/cli --save-dev
//npm install @babel/preset-env --save-dev

//=======convert the file =============
//node_modules/.bin/babel before.js -o after.js 

// nb you dont't add node_modules to git so whne get other developers codes you navigate and just do:
// npm install 
// ^this installs all packages in the package.json file so set up

// == then add to package file==

"scripts": {
   "babel": "node_modules/.bin/babel src/index.js -w -o dist/assets/bundle.js"
  },

  then in termianl run
  npm script babel

  ====webpack======
  1) first set up webpack.config.js file with entry and 0utput points.
  2)installing webpack once set up the webpack.config.js file you run this
  npm install webpack webpack-cli --save-dev
  3) convert the file
  node_modules/.bin/webpack
  4) but makes more sense to skip 3 and add that to the scripts section of
  the package.jsom file as below
  "scripts": {
    "babel": "node_modules/.bin/babel src/index.js -w -o dist/assets/bundle.js",
    "webpack": "node_modules/.bin/webpack -w"
  },
  5) then run to initialise
  npm run webpack
  6 )to cancel run webpack use "ctrl c"

  7) Installing webpack dev server(for previewing and running in development mode i.e. virtual server so quicker and in a way in a cahced version.)

  npm install webpack-dev-server@3.8.2

  8) Add this to package,json
   "serve": "webpack-dev-server"

   9) Add this to webpck,config
   devServer: {
        contentBase: path.resolve(__dirname, 'dist'),
        publicPath: '/assets/'
    }

    10) npm run serve

    11) to creat ea build server we then remove -w on webpack and rename webpack to build in package.json file as such
    "build": "node_modules/.bin/webpack",
    "serve": "webpack-dev-server"

    the can 'npm run serve' when developing and when ready to deploy run 'npm run build'
    

    also we delite form package.json file the babel line as shortly iwll be putting in webpack
       // "babel": "node_modules/.bin/babel src/index.js -w -o dist/assets/bundle.js",

    nb ctrl c cancels process.

    // adding production and development mode.. 

    12) integrating babel into webpack.. first laod up babel loader into webpack
    npm install babel-loader --save-dev

    13) add this to webpack config file
    module: {
        rules: [{
            test: /\.js$/,
            exclude: /node_modules/,
            use: {
                loader: 'babel-loader',
                options: {
                    presets: ['@babel/preset-env']
                }
            }
        }]
    }

    14) then
    npm run build
    and chekc and see babel is working 

    =========NEW Bolier Plate======

   1) download repoistiory and uplaod into new project folder
    https://github.com/iamshaunjp/modern-javascript/tree/lesson-165

   2)  then to installe node modules just

    npm install

    3) then kick off dev server

    npm run serve

    4) then to budle js for production server

    mpm run build

    

